#그리드 함수문제
# <문제>거슬름돈문제:
# 당신은 음식점의 계산을 도와주는 점원입니다. 카운터에는 거스름돈으로 사용할
# 500원, 100원, 50원, 10원짜리 동전이 무한히 존재한다고 가정합니다.
# 손님에게 거슬러 주어야 할 돈이 N원 일때 거슬러 주어야 할 돈전의
# 최소 개수를 구하세요. 단,거슬러줘야 할 돈 N은 항상 10의 배수입니다.

#거스름돈:문제해결 아이디어
#최적의 해를 빠르게 구하기 위해서는 가장큰 화폐단위부터 돈을 거슬러주면 됩니다.
# N원 거슬러 줘야 할때, 가자 먼저 500원으로 거슬러 줄수 있을만큼 거슬러줍니다.
# 이후에 100원,50원,10원 짜리 차례대로 거슬러 줄수 있을만큼 거슬러 주면 됩니다.
# N = 1260원 일때의 예시 확인

# #코딩
# n = 1260
# count = 0
# array = [500, 100, 50, 10]

# for coin in array:
#     count += n // coin
#     n %= coin
# print(count)

# #<문제>1이 될 때까지:문제설명
# 어떠한 수 N이1이 될때까지 다음의 두과정중 하나를 반복적으로 수행하려고 한다.
# 단. 두번째 연산은 N이K로 나누어 떨어질때만 선택할수 있습니다.
# 1.N에서 1을 뺍니다.
# 2.N을K로 나눕니다.
# 예를들어 N이 17,K가 4라고 가정합시다. 이때 1번의 과정을 한 번 수행하면 N은16이 됩니다.
# 이후에 2번의 과정을 두 번 수행하면 N은1이 됩니다. 결과적으로 이 경우 전체 과정을 실행한 횟수는 3이 됩니다.
# 이는 Nㅇ르 1로 만드는 최소 횟수입니다.
# N과K가 주어질때 N이1이 될 까지 1번 혹은 2번의 과정을 수행해야 하는 최소 횟수를 구하는 프로그램을 작성하시오.

# n,k = map(int,input().split()) #n,k을 공백을 기준으로 구분하여 입력받기
# result = 0
# while True:
#     target = (n // k) * k #n이 k로 나누어 떨어지는 수가 될 때까지 빼기
#     result += (n - target)
#     n = target
#     if n < k:                   # n 이 k 보다 작을때 (더이상 나눌수 없을때)반복문 탈출
#         break
#     result += 1            #k로 나누기
#     n //= k
# result += (n - 1)         #마지막으로 남은 수에 대하여 1씩빼기
# print(result)


#<문제>곱하기 혹은 더하기 :문제설명
# 각 자리가 숫자 (0부터9)로만 이루어진 문자열 S가 주어졌을때, 왼쪽부터 오른쪽으로 하나씩 모든 숫자를 
# 확인하며 숫자 사이에 'x'혹은 '+'연산자르르 넣어 결과적으로 만들어질 수있는 가장큰 수를 구하는 프로그램을 작성하세요
# 단.+보다x를 먼저 계산하는 일반적인 방식과는 달리,모든 연산은 왼쪽에서부터 순서대로 이루어진다고 가정합니다.
# 예를 들어 02984라는 문자열로 만들수 있는 가장 큰 수는 ((((0+2)x9)x8)x4) = 576입니다. 또한 만들어질수 있는
# 가장 큰 수는 항상 20억 이하의 정수가 되도록 입력이 주어집니다.


# s = input()
# result = int(s[0]) #첫번째 문자를 숫자로 변경하여 대입
# for i in range(1,len(s)):
#     num = int(s[i]) #두 수 중에서 하나라도 0혹은 1인경우, 곱하기보다는 더하기 수행
#     if num <= 1 or result <=1 :
#         result += num
#     else:
#         result *= num
# print(result)


#<문제>모험가 길드:
# 한 마을에 모함가가n명 있습니다. 모험가 길드에서는 n명의 모험가를 대상으로 공포도를 측정했는데
# 공포도가 높은 모험가는 쉽게 공포를 느껴 위험상황에서 제대로 대처할 능력이 떨어집니다.
# 모함가 길드장인 성훈이는 모함가 그룹을 안전하게 구성하고자 공포도가x인 모험가는 반드시 x명 이상으로 구성한 모험가 그룹에 참여해야 여행을
# 떠날수 있도록 규정했습니다. 
# 성훈이는 최대 몇개의 모험가 그룹을 만들수 있는지 궁금합니다. n명의 모험가에 대한 정보가 주어졌을때
# 여행을 떠날수 있는 그룹수의 최댓값을 구하는 프로그램을 작성하세요.

# n = int(input())
# data = list(map(int,input().split()))
# data.sort()

# result = 0 #총 그룹의 수
# count = 0 #현재 그룹에 포함된 모함가의 수

# for i in data: #공포도를 낮은 것부터 하나씩 확인하며
#     count += 1 #현재 그룹에 해당 모험가를 포함시키기
#     if count >= i: #현재 그룹에 포함된 모함가의 수가 현재의 공포도 이상이라면,그룹결성
#         result += 1 #총 그룹의 수 증가시키기 
#         count = 0 #현재 그룹에 포함된 모함가의 수 초기화

# print(result)  #총 그룹의 수 출력

